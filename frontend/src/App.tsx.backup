import React from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import { AuthProvider, useAuth } from './contexts/AuthContext';
import GlobalLayout from './components/Layout/GlobalLayout';
import BaseLayout from './components/Layout/BaseLayout';
import LoginPage from './pages/auth/LoginPage';
import AdminDashboard from './pages/admin/AdminDashboard';
import LibrarianDashboard from './pages/librarian/LibrarianDashboard';
import StudentDashboard from './pages/student/StudentDashboard';
import OPACPage from './pages/opac/OPACPage';
import LoadingSpinner from './components/UI/LoadingSpinner';
import {
  AdminRoute,
  LibrarianRoute,
  StudentRoute,
  PublicRoute,
  RouteGuard,
} from './components/Auth/RouteGuards';
import config from './services/config';

/**
 * Main Application Component
 * Implements clean architecture with role-based routing and global header navigation
 * Features: GlobalLayout for consistent header, role-based access control
 */

const App: React.FC = () => {
  return (
    <AuthProvider>
      <Router>
        <GlobalLayout>
          <Routes>
            {/* Public Routes - No Authentication Required but with global header */}
            <Route 
              path="/opac" 
              element={
                <RouteGuard allowUnauthenticated>
                  <div className="container mx-auto px-4 py-6">
                    <OPACPage />
                  </div>
                </RouteGuard>
              } 
            />

            {/* Authentication Routes - Redirect if already logged in */}
            <Route 
              path="/login" 
              element={
                <PublicRoute>
                  <div className="container mx-auto px-4 py-6">
                    <LoginPage />
                  </div>
                </PublicRoute>
              } 
            />

            {/* Protected Routes with BaseLayout (includes sidebar) */}
            <Route path="/" element={<BaseLayout />}>
              {/* Admin Routes */}
              <Route 
                path="admin/*" 
                element={
                  <AdminRoute>
                    <AdminDashboard />
                  </AdminRoute>
                } 
              />

              {/* Librarian Routes - Accessible by Admin and Librarian */}
              <Route 
                path="librarian/*" 
                element={
                  <LibrarianRoute>
                    <LibrarianDashboard />
                  </LibrarianRoute>
                } 
              />

              {/* Student Routes */}
              <Route 
                path="student/*" 
                element={
                  <StudentRoute>
                    <StudentDashboard />
                  </StudentRoute>
                } 
              />
            </Route>

            {/* Default Route - Smart Redirect */}
            <Route 
              path="/" 
              element={<SmartRedirect />} 
            />

            {/* 404 and Error Routes */}
            <Route path="/unauthorized" element={<UnauthorizedPage />} />
            <Route path="*" element={<NotFoundPage />} />
          </Routes>
        </GlobalLayout>
      </Router>
    </AuthProvider>
  );
};
          </Route>

          {/* Default Route - Smart Redirect */}
          <Route 
            path="/" 
            element={<SmartRedirect />} 
          />

          {/* 404 and Error Routes */}
          <Route path="/unauthorized" element={<UnauthorizedPage />} />
          <Route path="*" element={<NotFoundPage />} />
        </Routes>
      </Router>
    </AuthProvider>
  );
};

/**
 * Smart Redirect Component
 * Redirects users to appropriate dashboard based on authentication status and role
 */
const SmartRedirect: React.FC = () => {
  const { user, isAuthenticated, isLoading } = useAuth();

  if (isLoading) {
    return <LoadingSpinner />;
  }

  if (!isAuthenticated) {
    return <Navigate to={config.features.enableGuestAccess ? "/opac" : "/login"} replace />;
  }

  // Redirect to role-specific dashboard
  const dashboardRoute = getDashboardForRole(user?.role || '');
  return <Navigate to={dashboardRoute} replace />;
};

/**
 * Unauthorized Page Component
 */
const UnauthorizedPage: React.FC = () => (
  <div className="min-h-screen flex items-center justify-center bg-gray-50">
    <div className="max-w-md w-full bg-white shadow-lg rounded-lg p-6 text-center">
      <div className="w-16 h-16 mx-auto mb-4 flex items-center justify-center bg-red-100 rounded-full">
        <svg className="w-8 h-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.863-.833-2.634 0L4.168 16.5c-.77.833.192 2.5 1.732 2.5z" />
        </svg>
      </div>
      <h1 className="text-2xl font-bold text-gray-900 mb-2">Access Denied</h1>
      <p className="text-gray-600 mb-6">
        You don't have permission to access this page. Please contact your administrator if you believe this is an error.
      </p>
      <button
        onClick={() => window.history.back()}
        className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors"
      >
        Go Back
      </button>
    </div>
  </div>
);

/**
 * 404 Not Found Page Component
 */
const NotFoundPage: React.FC = () => (
  <div className="min-h-screen flex items-center justify-center bg-gray-50">
    <div className="max-w-md w-full bg-white shadow-lg rounded-lg p-6 text-center">
      <div className="w-16 h-16 mx-auto mb-4 flex items-center justify-center bg-gray-100 rounded-full">
        <svg className="w-8 h-8 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.464-.897-6.055-2.364C7.396 8.427 9.543 6 12.304 6c2.577 0 4.304 2.427 5.755 6.636z" />
        </svg>
      </div>
      <h1 className="text-2xl font-bold text-gray-900 mb-2">Page Not Found</h1>
      <p className="text-gray-600 mb-6">
        The page you're looking for doesn't exist or has been moved.
      </p>
      <a
        href="/opac"
        className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors inline-block"
      >
        Go to Library Catalog
      </a>
    </div>
  </div>
);

/**
 * Helper function to get dashboard route for user role
 */
function getDashboardForRole(role: string): string {
  switch (role) {
    case 'admin':
      return '/admin';
    case 'librarian':
      return '/librarian';
    case 'student':
      return '/student';
    default:
      return '/opac';
  }
}

export default App;
